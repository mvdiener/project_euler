# The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

# 1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

# Let us list the factors of the first seven triangle numbers:

#  1: 1
#  3: 1,3
#  6: 1,2,3,6
# 10: 1,2,5,10
# 15: 1,3,5,15
# 21: 1,3,7,21
# 28: 1,2,4,7,14,28
# We can see that 28 is the first triangle number to have over five divisors.

# What is the value of the first triangle number to have over five hundred divisors?

def prime_factors(number, array=[])
  2.upto(number) do |factor|
    if number % factor == 0
      array << factor
      number /= factor
      prime_factors(number, array)
      break
    end
  end
  array
end

def find_factors(num)
  primes = prime_factors(num)
  primes.uniq.map{|x| primes.count(x) + 1}.inject(:*)
end

def triangle_factors
  num = 200000
  until find_factors((num*(num+1))/2) == 500
    num += 1
  end
  num
end

p triangle_factors

p 399*400



